//
// great UTF encoding summary @
// http://www.azillionmonkeys.com/qed/unicode.html
// thanks Paul Hsieh!
import java.io.*;

public class mkrand {
  public static void main(String[] args) throws Exception {
    OutputStream out = new BufferedOutputStream(new FileOutputStream("rand.bpp",false));

    OutputStream vfy = new BufferedOutputStream(new FileOutputStream("rand.verify",false));

    String eols = System.getProperty("line.separator");
    byte[] EOL = new byte[eols.length()];
    for (int k=0; k<EOL.length; ++k) {
      EOL[k]=(byte)(eols.charAt(k));
      System.out.println("EOL[" + k + "]=" + EOL[k]);
    }

    for (int line=0; line<1000; ++line) {
      ByteArrayOutputStream baos=new ByteArrayOutputStream();
      int codes;
      if (Math.random()<0.5) {
        codes = (int)(10*Math.random());
      } else {
        codes = (int)(40*Math.random());
      }
      boolean quote=false;
      byte[] b = new byte[4];
      

      for (int i=0; i<codes; ++i) {
        for (;;) {
          int utf8= (int)(2*Math.random());
          int utfcode;
          switch(utf8) {
          case 0:
            utfcode=0x0+(int)((0x80-0x0)*Math.random());
            if (utfcode == '\n' || utfcode == '\r') continue;
            if (utfcode == '$' || (i==0 && (utfcode=='#'||utfcode=='\"'||utfcode=='\''))) quote=true;
            b[0]=(byte)(utfcode);
            baos.write(b,0,1);
            break;
          case 1:
            utfcode=0x80+(int)((0x800-0x80)*Math.random());
            b[0]=(byte)((0x06<<5)|((utfcode & (0x3F << 6))>>6));
            b[1]=(byte)((0x02<<6)|((utfcode & (0x3F << 0))>>0));
            //            System.out.println("" + utfcode + " -> (" + b[0] + "," + b[1] + ")");
            baos.write(b,0,2);
            break;
          case 2:	
            utfcode=0x800+(int)((0x10000-0x800)*Math.random());
            baos.write(((016<<4)&((utfcode & 0770000)>>12)));
            baos.write(((02<<6)&((utfcode & 0007700)>>6)));
            baos.write(((02<<6)&((utfcode & 0000077)>>0)));
            break;
          }
          break;
        }
      }
      baos.write(EOL,0,EOL.length);
      if (quote) out.write('\'');
      byte[] data = baos.toByteArray();
      out.write(data,0,data.length);
      vfy.write(data,0,data.length);
    }
    out.close();
    vfy.close();
  }
}
